---
- name: Install foreman server

  hosts: foreman_app

  become: yes

  roles:

    - nephelaiio.plugins
    - nephelaiio.pip

  vars:

    foreman_api_allpages: 9999999999

  tasks:

    - block:

        - name: query template kinds
          uri:
            url: "{{ foreman_url }}/api/template_kinds"
            method: GET
            body_format: json
            body:
              per_page: "{{ foreman_api_allpages }}"
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 200
          register: foreman_template_kind_query
          tags:
            - always

        - name: set template kind facts
          set_fact:
            foreman_template_kind_results: "{{ foreman_template_kind_query.json.results }}"
          tags:
            - always

        - name: query provisioning template list
          uri:
            url: "{{ foreman_url }}/api/provisioning_templates"
            method: GET
            body_format: json
            body:
              per_page: "{{ foreman_api_allpages }}"
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 200
          register: foreman_ptemplate_list
          tags:
            - always

        - name: query provisioning templates
          uri:
            url: "{{ foreman_url }}/api/provisioning_templates/{{ item.id }}"
            method: GET
            body_format: json
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 200
          loop_control:
            label: "{{ item.name }}"
          loop: "{{ foreman_ptemplate_list.json.results }}"
          register: foreman_ptemplate_results
          tags:
            - always

        - name: create foreman operating systems
          foreman_operatingsystem:
            name: "{{ item.name }}"
            family: "{{ item.family }}"
            major: "{{ item.major }}"
            minor: "{{ item.minor | default(omit) }}"
            release_name: "{{ item.release_name | default(omit) }}"
            provisioning_templates: "{{ item.provisioning_templates | default(omit) }}"
            architectures: "{{ item.architectures | default(omit) }}"
            media: "{{ item.media | default(omit) }}"
            ptables: "{{ item.ptables | default(omit) }}"
            password_hash: "{{ item.password_hash | default('SHA512') }}"
            server_url: "{{ foreman_url }}"
            username: "{{ foreman_admin_user }}"
            password: "{{ foreman_admin_pass }}"
          loop_control:
            label: "{{ item.name }}"
          loop: "{{ foreman_os | default([]) }}"
          ignore_errors: yes
          tags:
            - os

        - name: enumerate foreman media
          set_fact:
            foreman_media: "{{ foreman_os | selectattr('media', 'defined') | map(attribute='media') | flatten(levels=1) | unique | list }}"
          tags:
            - always

        - name: manage foreman installation media
          foreman_installation_medium:
            name: "{{ item }}"
            locations: "{{ foreman_locations }}"
            organizations: "{{ foreman_organizations }}"
            operatingsystems: "{{ media_os_names}}"
            server_url: "{{ foreman_url }}"
            username: "{{ foreman_admin_user }}"
            password: "{{ foreman_admin_pass }}"
          vars:
            foreman_os_dict: "{{ foreman_os | list_to_dict(key_attr='name', remove_key=False) }}"
            media_os: "{{ foreman_os | selectattr('media', 'contains', item) | map(attribute='name') | unique | list }}"
            media_os_names: "{{ media_os | map('extract', foreman_os_dict) | map('map_attributes', ['name', 'major']) | map('join', ' ') | list }}"
          loop: "{{ foreman_media | default([]) }}"
          tags:
            - media

        - name: register provisioning template data
          set_fact:
            foreman_provisioning_template_details: "{{ foreman_ptemplate_results.results | map(attribute='json') | list | list_to_dict(key_attr='name') }}"
          tags:
            - always

        - name: enumerate foreman provisioning templates
          set_fact:
            foreman_provisioning_templates: "{{ foreman_os | selectattr('provisioning_templates', 'defined') | map(attribute='provisioning_templates') | flatten(levels=1) | unique | list }}"
          tags:
            - always

        - name: manage foreman environments
          foreman_environment:
            name: "{{ item.name }}"
            organizations: "{{ item.organizations | default(omit) }}"
            locations: "{{ item.locations | default(omit) }}"
            server_url: "{{ foreman_url }}"
            username: "{{ foreman_admin_user }}"
            password: "{{ foreman_admin_pass }}"
          loop_control:
            label: "{{ item.name }}"
          loop: "{{ foreman_environments | default([]) }}"
          tags:
            - environments

        - name: manage foreman hostgroups
          foreman_hostgroup:
            name: "{{ item.name }}"
            organizations: "{{ item.organizations | default(omit) }}"
            locations: "{{ item.locations | default(omit) }}"
            domain: "{{ item.domain | default(omit) }}"
            subnet: "{{ item.subnet | default(omit) }}"
            architecture: "{{ item.architecture | default(omit) }}"
            media: "{{ item.media | default(omit) }}"
            operatingsystem: "{{ item.operatingsystem | default(omit) }}"
            pxe_loader: "{{ item.pxe_loader | default(omit) }}"
            ptable: "{{ item.ptable | default(omit) }}"
            environment: "{{ item.environment | default(omit) }}"
            puppet_proxy: "{{ item.puppet_proxy | default(omit) }}"
            puppet_ca_proxy: "{{ item.puppet_ca_proxy | default(omit) }}"
            openscap_proxy: "{{ item.openscap_proxy | default(omit) }}"
            parameters: "{{ item.parameters | default(omit) }}"
            root_pass: "{{ item.root_pass | default(omit) }}"
            server_url: "{{ foreman_url }}"
            username: "{{ foreman_admin_user }}"
            password: "{{ foreman_admin_pass }}"
          loop_control:
            label: "{{ item.name }}"
          loop: "{{ foreman_hostgroups | default([]) }}"
          tags:
            - hostgroups

      delegate_to: localhost
